一：适配器模式
            结构型设计模式

	定义：
        将一个类的接口转换成客户期望的另一个接口，使原本的接口不兼容的类可以一起工作。

	模式分析：
		a：
		b:

	优点：
		a:能提高类的透明性和服用，现有的类服用但不需要改变
		b：目标类和适配器类解耦，提高程序的扩展性
		c:在很多业务场景中符合开闭原则
	缺点：
	  	a：适配器编写过程需要全面考虑，可能会增加系统的复杂性
	  	b：增加代码阅读难度，降低代码可读性。过多使用适配器会使系统代码变得凌乱

	应用案例：
        AdvisorAdapter、handlerAdapter
	应用场景：
	    a:已经存在的类，它的方法和需求不匹配(方法结果相同或者相似)
	    b:适配器模式不是软件设计阶段可考虑的设计模式，是随着软件维护，
	        由于不同产品、不同厂家造成功能类似而接口不相同情况下的解决方案。